#For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

worker_processes auto;

#Max setting for a Linux File System (2 power of 20)
worker_rlimit_nofile 1048576;

#Only log critical errors
error_log /var/log/nginx/error.log crit;

#With 1048576 files and 36 processors on a C4.8XLarge each worker can have 28000 max connections, leaving headroom for the OS files
#Use EPOLL sets the event scheduling, this is very important and should be set on all Linux 2.6+
#Multi-accept allows NGINX to grab multiple connections before terminating them
events {
 worker_connections 28000;
 use epoll;
 multi_accept on;
}

# Buffer log writes to speed up IO, or disable them altogether
access_log /var/log/nginx/access.log main buffer=16k;

# Caches information about open FDs, frequently accessed files.
http {
sendfile on;
open_file_cache max=200000 inactive=20s;
open_file_cache_valid 30s;
open_file_cache_min_uses 2;
open_file_cache_errors on;

# Tcp_nopush causes Nginx to attempt to send its HTTP response head in one packet,
# instead of using partial frames. This is useful for prepending headers before calling sendfile,
# or for throughput optimization.
tcp_nopush on;

# don't buffer data-sends (disable Nagle algorithm). Good for sending frequent small bursts of data in real time.
tcp_nodelay on;

# Timeout for keep-alive connections. Server will close connections after this time.
keepalive_timeout 30;

# Number of requests a client can make over the keep-alive connection.
keepalive_requests 100000;

# allow the server to close the connection after a client stops responding. Frees up socket-associated memory.
reset_timedout_connection on;

# send the client a "request timed out" if the body is not loaded by this time. Default 60.
client_body_timeout 15;

# If the client stops reading data, free up the stale client connection after this much time. Default 60.
send_timeout 3;

# Compression. Reduces the amount of data that needs to be transferred over the network
gzip on;
gzip_min_length 10240;
gzip_proxied expired no-cache no-store private auth;
gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
gzip_disable "MSIE [1-6]\.";

include /etc/nginx/conf.d/*.conf;

   index   index.html index.htm;

   server {
       listen       80;
       server_name  localhost;
       root         /usr/share/nginx/html;

      #access_log off;
       #charset koi8-r;

       #access_log  /var/log/nginx/host.access.log  main;

#Use this to get real-time stats for NGINX in the browser
  location /nginx_status {
       #Turn on stats
                stub_status on;
                        access_log   off;
                                        allow all;
                            }
      location / {
      proxy_buffers 8 24k;
      proxy_buffer_size 2k;
      proxy_pass http://ENTER YOUR URL HERE; //Change this to your Proxy URL

       # redirect server error pages to the static page /40x.html
       #
       error_page  404              /404.html;
       location = /40x.html {
       }

       # redirect server error pages to the static page /50x.html
       #
       error_page   500 502 503 504  /50x.html;
       location = /50x.html {
       }
   }
}
